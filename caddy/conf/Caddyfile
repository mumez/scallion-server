{
	order webdav before file_server
	vars {
		jwtIss "https://securetoken.google.com/scallion-fefc3"
		jwtAud "scallion-fefc3"
		wikiServers 192.168.80.128:9088 192.168.80.128:9089
	}
}

(verify_jwt) {
	jwtauth {
		sign_alg RS256
		jwk_url https://www.googleapis.com/robot/v1/metadata/jwk/securetoken@system.gserviceaccount.com
		issuer_whitelist {vars.jwtIss}
		audience_whitelist {vars.jwtAud}
	}
}

(cors) {
	header Access-Control-Allow-Origin "{args.0}"
	header Access-Control-Allow-Methods "OPTIONS, LOCK, DELETE, PROPPATCH, COPY, MOVE, UNLOCK, PROPFIND, MKCOL, GET, POST, PUT"
	header Access-Control-Allow-Headers "Authorization, X-Requested-With, X-HTTP-Method-Override, Content-Type, Accept, API, Depth"
	header Vary Origin
	@options {
		method OPTIONS
	}
	respond @options 204
}

(to_dav_route_common) {
	root uploads
	webdav {
		prefix /dav
	}
}

(to_dav) {
	@dav_update {
		method POST PUT PATCH DELETE COPY MKCOL MOVE PROPPATCH
		path /dav/*
	}
	route @dav_update {
		import cors "*"
		import verify_jwt
		import to_dav_route_common
	}
	@dav {
		path /dav/*
	}
	route @dav {
		import cors "*"
		import to_dav_route_common
	}
}

(to_api_route_common) {
	uri strip_prefix /api
	reverse_proxy {
		to {vars.wikiServers}
		lb_policy ip_hash
	}
}

(to_api) {
	@api_update {
		method POST PUT PATCH DELETE
		path /api/*
	}
	route @api_update {
		import cors "*"
		import verify_jwt
		import to_api_route_common
	}
	@api {
		path /api/*
	}
	route @api {
		import cors "*"
		import to_api_route_common
	}
}

:2016 {
	import to_dav
	import to_api
}
